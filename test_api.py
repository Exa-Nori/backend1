#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
"""

import requests
import json
import sys

BASE_URL = "http://localhost:5000"

def test_telegram_connection():
    """–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/test-telegram")
        data = response.json()
        
        if response.status_code == 200:
            print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –ë–æ—Ç: {data.get('bot_info', {}).get('username', 'N/A')}")
            print(f"   Chat ID: {data.get('chat_id', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_send_message():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã...")
    
    test_data = {
        "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "phone": "+79991112233",
        "email": "test@example.com",
        "message": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API.",
        "timestamp": "2024-01-01 12:00:00"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/send-to-telegram",
            json=test_data,
            headers={"Content-Type": "application/json"}
        )
        data = response.json()
        
        if response.status_code == 200:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_send_order():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞"""
    print("\nüõí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞...")
    
    test_order_data = {
        "serviceTitle": "–£—Å–ª—É–≥–∏ —Å–∏–¥–µ–ª–∫–∏ (–¥–Ω–µ–≤–Ω–æ–µ –≤—Ä–µ–º—è)",
        "servicePrice": "2500 ‚ÇΩ",
        "duration": "7",
        "date": "2024-02-01",
        "name": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
        "phone": "+79991112233",
        "email": "ivan@example.com",
        "comments": "–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –ø–æ–∂–∏–ª—ã–º–∏ –ª—é–¥—å–º–∏. –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ –∂–µ–Ω—â–∏–Ω–∞ 40-55 –ª–µ—Ç.",
        "timestamp": "2024-01-15 14:30:00"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/send-order-to-telegram",
            json=test_order_data,
            headers={"Content-Type": "application/json"}
        )
        data = response.json()
        
        if response.status_code == 200:
            print("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            print(f"   –£—Å–ª—É–≥–∞: {test_order_data['serviceTitle']}")
            print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {test_order_data['duration']} –¥–Ω–µ–π")
            print(f"   –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {int(test_order_data['servicePrice'].replace(' ‚ÇΩ', '')) * int(test_order_data['duration']):,} ‚ÇΩ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_get_chat_id():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è chat ID"""
    print("\nüÜî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è chat ID...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/get-chat-id")
        data = response.json()
        
        if response.status_code == 200:
            print("‚úÖ Chat ID –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(f"   –¢–µ–∫—É—â–∏–π Chat ID: {data.get('current_chat_id', 'N/A')}")
            print(f"   –î–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤: {len(data.get('available_chats', []))}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API...\n")
    
    # –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram
    test_telegram_connection()
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è chat ID
    test_get_chat_id()
    
    # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ (–Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
    test_send_order()
    
    # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
    test_send_message()
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == '__main__':
    main() 